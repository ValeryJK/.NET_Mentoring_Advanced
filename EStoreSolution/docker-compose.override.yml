services:
  mssqldb:
    container_name: mssql-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Admin!1234"
    ports:
      - "1433:1433"
    volumes:
      - db_mssql_data:/var/opt/mssql
    networks:
      - my_network  
 
  cartdb:
    container_name: cart-db    
    restart: always
    ports:
      - "27018:27017"   
    volumes:
      - mongo_data:/data/db
    networks:
      - my_network
  
  keycloakdb:    
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_db_user
      POSTGRES_PASSWORD: Admin!1234
    ports:
      - '5442:5432'    
    volumes:
      - db_keycloak_data:/var/lib/postgresql/data
    networks:
      - my_network  
   
  cart.api:
    container_name: cart.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - OpenTelemetry__OtlpEndpoint=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - "DatabaseSettings__ConnectionString=mongodb://cartdb:27017"
      - Authentication__Authority=http://keycloak-app:8080/auth/realms/estore-realm
      - Authorization__AuthorizationUrl=http://keycloak-app:8080/auth/realms/estore-realm/protocol/openid-connect/auth
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
    ports:
      - "8000:8080"
      - "8001:8081"
    depends_on:
      - cartdb      
      - keycloak
      - jaeger
      - rabbitmq
    networks:
      - my_network

  catalog.api:   
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - OpenTelemetry__OtlpEndpoint=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - DatabaseSettings__ConnectionString=Server=mssql--db;Database=CatalogDb;User Id=sa;Password=Admin!1234;TrustServerCertificate=True
      - Authentication__Authority=http://keycloak-app:8080/auth/realms/estore-realm
      - Authorization__AuthorizationUrl=http://keycloak-app:8080/auth/realms/estore-realm/protocol/openid-connect/auth
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
    ports:
      - "8002:8080" 
      - "8003:8081"
    depends_on:
      - mssqldb
      - keycloak
      - jaeger
      - rabbitmq
    networks:
      - my_network
  
  healthchecks-web:
    container_name: healthchecks-web
    build:
      context: .
      dockerfile: src/WebStatus/HealthCheck.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8005:8080"
    depends_on:
      - cart.api
      - catalog.api    
    volumes:
      - healthchecks-web-data:/storage 
    networks:
      - my_network

  portainer:
    container_name: portainer-app
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - my_network

  prometheus:
    container_name: prometheus-app
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my_network
      
  grafana:
    container_name: grafana-app
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - my_network

  keycloak:
    container_name: keycloak-app
    command: start-dev
    environment:     
      KC_HEALTH_ENABLED: true
      KC_HTTP_RELATIVE_PATH: /auth
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Admin!1234
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak_db
      KC_DB_USERNAME: keycloak_db_user
      KC_DB_PASSWORD: Admin!1234
    ports:
      - '8080:8080'
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: always
    depends_on:
      - keycloakdb
    networks:
      - my_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "4317:4317"
      - "14250:14250"
    networks:
      - my_network
      
volumes:
  mongo_data:
  db_mssql_data:
  db_keycloak_data:  
  keycloak_data:

networks:
  my_network:
    driver: bridge